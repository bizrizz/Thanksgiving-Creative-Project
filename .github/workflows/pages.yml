name: Build and Deploy GitHub Pages (pygbag)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install pygbag pygame; fi

      - name: Build web app with pygbag
        run: |
          # Build the project; default entry is main.py
          if [ -f main.py ]; then
            python -m pygbag --build main.py
          else
            # Fallback: search for a likely entrypoint
            entry=$(ls -1 *.py | head -n1)
            python -m pygbag --build "$entry"
          fi

      - name: Prepare Pages artifact
        run: |
          mkdir -p site
          # Copy generated web output
          if [ -d build/web ]; then
            cp -r build/web/* site/
          fi
          if [ -d build/web-cache ]; then
            mkdir -p site/web-cache
            cp -r build/web-cache/* site/web-cache/
          fi
          # Avoid Jekyll processing on GitHub Pages
          touch site/.nojekyll

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


